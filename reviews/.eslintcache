[{"/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/index.js":"1","/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/App.js":"2","/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/Reviews.js":"3","/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/data.js":"4","/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/Review.js":"5"},{"size":219,"mtime":1610714624653,"results":"6","hashOfConfig":"7"},{"size":282,"mtime":1610716745226,"results":"8","hashOfConfig":"7"},{"size":1125,"mtime":1610723953234,"results":"9","hashOfConfig":"7"},{"size":1609,"mtime":1610715200276,"results":"10","hashOfConfig":"7"},{"size":315,"mtime":1610800805244,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1g3puzv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/index.js",[],["24","25"],"/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/App.js",[],"/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/Reviews.js",["26"],"import React, { useState } from 'react';\nimport data from './data';\nimport Review from './Review';\n\nconst Reviews = () => {\n  const [people, setPeople] = useState(data);\n  const [index, setIndex] = useState(0);\n\n  const nextHandler = () => {\n    if (index < people.length - 1) {\n      setIndex(index + 1);\n    } else {\n      setIndex(0);\n    }\n  };\n\n  const prevHandler = () => {\n    if (index > 0) {\n      setIndex(index - 1);\n    } else {\n      setIndex(people.length - 1);\n    }\n  };\n\n  const surpriseHandler = () => {\n    const random = Math.floor(Math.random() * people.length);\n    setIndex(random);\n  };\n\n  return (\n    <div className='card'>\n      <Review {...people[index]} />\n      <div className='btn-next'>\n        <button className='btn' onClick={prevHandler}>\n          <i className='fas fa-chevron-left'></i>\n        </button>\n        <button className='btn' onClick={nextHandler}>\n          <i className='fas fa-chevron-right'></i>\n        </button>\n      </div>\n\n      <button className='btn surprise' onClick={surpriseHandler}>\n        Suprise Me\n      </button>\n    </div>\n  );\n};\n\nexport default Reviews;\n","/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/data.js",[],"/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/reviews/src/Review.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":6,"column":18,"nodeType":"33","messageId":"34","endLine":6,"endColumn":27},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'setPeople' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]