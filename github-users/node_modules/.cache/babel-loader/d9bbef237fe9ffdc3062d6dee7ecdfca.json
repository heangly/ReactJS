{"ast":null,"code":"var _jsxFileName = \"/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/github-users/src/components/Repos.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\n\nconst Repos = () => {\n  const {\n    repos\n  } = React.useContext(GithubContext);\n  let languages = repos.reduce((total, item) => {\n    const {\n      language\n    } = item;\n    if (!language) return total;\n\n    if (!total[language]) {\n      total[language] = {\n        label: language,\n        value: 1\n      };\n    } else {\n      total[language] = {\n        label: language,\n        value: total[language] + 1\n      };\n    }\n\n    return total;\n  }, {});\n  console.log(languages);\n  const chartData = languages.map(language => language);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie3D, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\nexport default Repos;","map":{"version":3,"sources":["/Users/heangly/Desktop/Self-Development/2-ReactJs/Projects/github-users/src/components/Repos.js"],"names":["React","styled","GithubContext","ExampleChart","Pie3D","Column3D","Bar3D","Doughnut2D","Repos","repos","useContext","languages","reduce","total","item","language","label","value","console","log","chartData","map","Wrapper","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,UAA/C,QAAiE,UAAjE;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAYT,KAAK,CAACU,UAAN,CAAiBR,aAAjB,CAAlB;AAEA,MAAIS,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC5C,UAAM;AAAEC,MAAAA;AAAF,QAAeD,IAArB;AACA,QAAI,CAACC,QAAL,EAAe,OAAOF,KAAP;;AACf,QAAI,CAACA,KAAK,CAACE,QAAD,CAAV,EAAsB;AACpBF,MAAAA,KAAK,CAACE,QAAD,CAAL,GAAkB;AAAEC,QAAAA,KAAK,EAAED,QAAT;AAAmBE,QAAAA,KAAK,EAAE;AAA1B,OAAlB;AACD,KAFD,MAEO;AACLJ,MAAAA,KAAK,CAACE,QAAD,CAAL,GAAkB;AAAEC,QAAAA,KAAK,EAAED,QAAT;AAAmBE,QAAAA,KAAK,EAAEJ,KAAK,CAACE,QAAD,CAAL,GAAkB;AAA5C,OAAlB;AACD;;AAED,WAAOF,KAAP;AACD,GAVe,EAUb,EAVa,CAAhB;AAYAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AAEA,QAAMS,SAAS,GAAGT,SAAS,CAACU,GAAV,CAAeN,QAAD,IAAcA,QAA5B,CAAlB;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEK,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CA1BD;;AA4BA,MAAME,OAAO,GAAGrB,MAAM,CAACsB,GAAI;;;;;;;;;;;;;;;;;;;;CAA3B;AAsBA,eAAef,KAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from '../context/context';\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from './Charts';\n\nconst Repos = () => {\n  const { repos } = React.useContext(GithubContext);\n\n  let languages = repos.reduce((total, item) => {\n    const { language } = item;\n    if (!language) return total;\n    if (!total[language]) {\n      total[language] = { label: language, value: 1 };\n    } else {\n      total[language] = { label: language, value: total[language] + 1 };\n    }\n\n    return total;\n  }, {});\n\n  console.log(languages);\n\n  const chartData = languages.map((language) => language);\n\n  return (\n    <section className='section'>\n      <Wrapper className='section-center'>\n        <Pie3D data={chartData} />\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}